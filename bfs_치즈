import java.io.*;
import java.util.*;

class Main {
	public static class line{
		int a;
		int b;
		public line(int a, int b){
			this.a= a;
			this.b= b;
		}
	}
	public static int[][] dir ={{-1, 0}, {1, 0}, {0, 1}, {0, -1}};
	public static int[][] arr;
	public static int[][] visit;
	public static int n;
	public static int m;
	public static void dfs(){
		Stack<line> st = new Stack<>();
		st.push(new line(0,0));
		while(!st.isEmpty()) {
			line f = st.pop();
			
			for(int i=0; i<4; i++){
				int x = f.a + dir[i][0];
				int y = f.b + dir[i][1];

				if(x < 0 || x >=n || y< 0 || y >=m) continue;
				if(visit[x][y] == 1) continue;
				if(arr[x][y] == 1){
					arr[x][y] = 2; // 여기서 0 으로 바꾸면 dfs 에 차질
					visit[x][y] = 1;
				}
				if(arr[x][y] == 0){
					visit[x][y] = 1;
					st.add(new line(x, y));
				}
			}

		}
	}
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		n = Integer.parseInt(str[0]);
		m = Integer.parseInt(str[1]);
		arr =new int[n][m];
		visit = new int[n][m];
		for(int i=0; i<n; i++){
			str = br.readLine().split(" ");
			for(int j=0; j<m; j++){
				arr[i][j] = Integer.parseInt(str[j]);
			}
		}
		int time =0;
		int prev=0;
		while(true){
			for(int i=0; i<n; i++){
				Arrays.fill(visit[i], 0);
			}
			dfs();
			time+=1;
			int cnt =0;

			for(int i=0; i<n; i++){
				for(int j=0; j<m; j++){
					if(arr[i][j] == 2){
						cnt++;
						arr[i][j] = 0;
					}
				}
			}
			if(cnt == 0) {
				System.out.println(time-1);
				System.out.println(prev);
				break;
			}
	
			prev = cnt;
		}
	}
}
