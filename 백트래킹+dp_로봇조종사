// 풀다가 멈춤.
import java.io.*;
import java.util.*;
class  test{

public static int arr[][];
public static int dp[][][];
public static int visit[][];
public static int[] dx = { 0,0,1 };
public static int[] dy = { -1,1,0 };
public static int n;
public static int m;
public static int dfs(int x, int y, int dir) {

	if(x == n-1 && y == m-1) return dp[n-1][m-1][dir];
	for(int i=0; i<3; i++){
		int nx = x + dx[i];
		int ny = y + dy[i];
		
		if(nx <0 || nx >n ||  ny<0 || ny>m) continue;
		visit[nx][ny] =1;
		dp[x][y][dir] = Math.max(dp[x][y][dir], dfs(nx, ny, dir) + arr[x][y]);
		visit[nx][ny] = 0;
	}
	return dp[x][y][dir];
}
	
	public static void test(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		int n = Integer.parseInt(str[0]);
		int m = Integer.parseInt(str[1]);
		arr = new int[n][m];
		dp = new int[n][m][3];
		visit = new int[n][m];
		for(int i=0; i<n; i++){
			str = br.readLine().split(" ");
			for(int j=0; j<m; j++){
				arr[i][j] = Integer.parseInt(str[j]);
			}
		}
		int result =0;
		visit[0][0] = 1;
		result = dfs(0,0,0);
		System.out.println(result);
	}
}