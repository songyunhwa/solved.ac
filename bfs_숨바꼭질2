import java.io.*;
import java.util.*;
class Main {
	public static int[] arr= new int[100001];

	public static void q(int n, int k) {
		int result =Integer.MAX_VALUE;
		int result_cnt =Integer.MAX_VALUE;

		arr[n] = 1;
		Queue<Integer> q = new LinkedList<>();
		q.add(n);

		while(!q.isEmpty()){
			int f = q.poll();
			if(arr[f] > result) continue;
			
			int next = 0;
			for(int i=0; i<3; i++){
				if(i == 0){
					next = f+1;
				}else if(i==1){
					next = f-1;
				}else{
					next = f*2;
				}

				if(next < 0 || next > 100000){
					continue;
				}

				if(k == next){ // 현재값이 찾던 값과 같으면.
					result = arr[f];
					result_cnt++;
				}

				// 제일 처음에 도착한 거인거나 같은 거리일때
				if(arr[next] == 0 || arr[next] == arr[f]+1){
					arr[next] = arr[f]+1;
					q.add(f);
				}

			}
		}

		System.out.println(result);
		System.out.println(result_cnt);
	}
		public static void main(String[] args) throws Exception {

			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			StringTokenizer st;
	
			st = new StringTokenizer(br.readLine());
			int n = Integer.parseInt(st.nextToken());
			int k = Integer.parseInt(st.nextToken());
	
			if (n >= k) {
				System.out.println((n-k) + "\n1");
				return;
			}

		q( n, k);

	}
}