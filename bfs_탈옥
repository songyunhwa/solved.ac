import java.io.*;
import java.util.*;

class Main {
	public static int a=0;
	public static int b=0;
	public static int answer=0;
	public static int[][] dir = {{-1,0},{1,0},{0,1},{0,-1}};
	public static PriorityQueue<line> list;
	public static class line implements Comparable<line>{
		int x; 
		int y;
		int door;
		public line(int x, int y, int door){
		  this.x= x;
		  this.y= y;
		  this.door=door;
		}
		
        @Override
        public int compareTo(line o) {
            return Integer.compare(this.door, o.door);
        }
	  }
	  public static boolean isWall(line f){
		  if(f.x == 0 || f.x == a-1) return true;
		  if(f.y == 0 || f.y == b-1) return true;
		  return false;
	  }
	  public static void bfs(String[][] arr){
		int[][] visit = new int[a][b];

		while(!list.isEmpty()){
			line f = list.poll();
			visit[f.x][f.y] = f.door;

			if(arr[f.x][f.y].equals("#") && isWall(f)){
				answer = f.door;
			}else {
			for(int i=0; i<4; i++){
				int x = f.x + dir[i][0];
				int y = f.y + dir[i][1];

				if(x>=0 && x < a && y>=0 && y<b){
					if(visit[x][y] == 0 && !arr[x][y].equals("*")){
						if(arr[x][y].equals("#"))
						list.add(new line(x, y, f.door+1));
						else 
						list.add(new line(x,y, f.door));
					}
				}
				}
			}
		}

	  }
   	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int n = Integer.parseInt(br.readLine());
		list =new PriorityQueue<>();
		for(int i=0; i<n; i++){
			String[] str = br.readLine().split(" ");
			a = Integer.parseInt(str[0]);
			b = Integer.parseInt(str[1]);

			list.clear();
			String[][] arr = new String[a][b];
			for(int h=0; h<a; h++){
				String str1 = br.readLine();
				for(int k=0; k<b; k++){
					arr[h][k] = str1.substring(k, k+1);
					if(arr[h][k].equals("$")){
						list.add(new line(h,k ,0));
					}
				}
			}
			answer=0;
			bfs(arr);
			System.out.println(answer);
		}
	
	}
}