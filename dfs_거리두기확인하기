import java.util.*;
class Solution {
	public static int[][] dir = {{-1, 0}, {1,0}, {0,1}, {0,-1}};
	public static boolean end = false;
	public static class line{
		int x;
		int y;
		int cnt;
		public line(int x, int y, int cnt){
			this.x = x;
			this.y = y;
			this.cnt = cnt;
		}
	}
	public static void dfs(int a, int b, int[][] visit, String[][] str ){
		Queue<line> q= new LinkedList<>();
		q.add(new line(a, b, 3));
		while(!q.isEmpty()){
			line f = q.poll();
			visit[f.x][f.y] = 1;

			if(f.cnt == -1) continue;

			for(int k=0; k<4; k++){
				int x = f.x + dir[k][0];
				int y = f.y + dir[k][1];

				if(x>=0 && x<5&& y>=0 && y<5){
					if(visit[x][y] == 0) {
					if(str[x][y].equals("X")){
						continue;
					}
					else if(str[x][y].equals("P") ){
						end = true;
						break;
					}else if(str[x][y].equals("0")) //0일 때 이걸 안쓰면 답이 이상하게 나오네...
					q.add(new line(x,y, f.cnt-1));
				}
				}
			}

		}
	}
	public static int[] solution(String[][] places) {
        int[] answer = new int[5];
		
		for(int i=0; i<places.length; i++){
			Queue<line> q= new LinkedList<>();
			String[][] str  = new String[5][5];
			for(int j=0; j<places[0].length; j++){
			String[] s = places[i][j].split("");
			end= false;
				for(int k=0; k<5; k++){
				str[j][k] = s[k];
				if(str[j][k].equals("P")){
					q.add(new line(j,k , 3));
				}		
				}
			}

		while(!q.isEmpty()) {
			int[][] visit=  new int[5][5];

			line f = q.poll();
			dfs(f.x ,f.y, visit, str);
		}
		if(end)
		answer[i] =0;
		else answer[i] = 1; 

		q.clear();
		}
	
        return answer;
    }
}