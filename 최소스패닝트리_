
import java.io.*;
import java.util.*;

class Main {
	public static int[] parent;
	static class Edge implements Comparable<Edge> {
        int from, to, weight;
 
        public Edge(int from, int to, int weight) {
            super();
            this.from = from;
            this.to = to;
            this.weight = weight;
        }
 
        @Override
        public int compareTo(Edge o) {
            return Integer.compare(this.weight, o.weight);
        }
        
    }
	public static int findParent(int a){
		if(parent[a] == a) return a;
		return parent[a] = findParent(parent[a]);
	}

   	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
       String[] strs = br.readLine().split(" ");
		int n = Integer.parseInt(strs[0]);
		int m = Integer.parseInt(strs[1]);
		int[][] d = new int[n+1][n+1];	

		Edge[] list= new Edge[n];
		for(int i=0; i<m; i++){
			String[] str= br.readLine().split(" ");
			int a = Integer.parseInt(str[0]);
			int b = Integer.parseInt(str[1]);
			int c = Integer.parseInt(str[2]);

			list[i] = new Edge(a,b,c);
		}

		Arrays.sort(list);

		parent = new int[n+1];
		for(int i=1; i<=n; i++){
			parent[i] = i;
		}
		int answer = 0;
		int cnt=0;
		for(Edge e : list){
			int a =findParent(e.from); 
			int b =findParent(e.to);

			if(a != b){
				parent[a] =b;
				answer += e.weight;
				if(++cnt == n-1)
				break;
			}
		}
		

		System.out.println(answer);
	
	}
}