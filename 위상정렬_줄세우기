
import java.io.*;
import java.util.*;

class Main {

	// 줄세우기 - 위상정렬 이중리스트 만들어서 + 해주기?
	static class line implements Comparable<line>{
		int i;
		int num;
		public line(int i, int num){
			this.i = i;
			this.num = num;
		}
		@Override
		public int compareTo(line h2){
			if(this.num > h2.num)return 1;
			return -1;
		}
	}
   	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
       String[] strs = br.readLine().split(" ");
		int n = Integer.parseInt(strs[0]);
		int m = Integer.parseInt(strs[1]);

		ArrayList<ArrayList<Integer>> arr = new ArrayList<>();
		for(int i=0; i<=n; i++){
			arr.add(new ArrayList<Integer>());
		}
		int[] de = new int[n+1];
		for(int i=0; i<m; i++){
			strs = br.readLine().split(" ");
			int a= Integer.parseInt(strs[0]);
			int b= Integer.parseInt(strs[1]);
			arr.get(a).add(b);
			de[b]++;
		}
		Queue<Integer> q = new LinkedList<>();
		ArrayList<Integer> arrs = new ArrayList<Integer>();

		// 진입차수 0 인것부터
		for(int i=1; i<=n; i++){
			if(de[i] == 0) {
				q.add(i);
			}
		}
		while(!q.isEmpty()){
			int i = q.poll();
			arrs.add(i);
			for(int j=0; j<arr.get(i).size(); j++){
				de[arr.get(i).get(j)]-=1;
				if(de[arr.get(i).get(j)] == 0){
					q.add(arr.get(i).get(j));
				}
			}
			
		}
	
		for(int i=1; i<=n; i++){
			if(!arrs.contains(i))arrs.add(i);
		}
		for(int i=0; i< arrs.size(); i++)	
		System.out.print(arrs.get(i) + " ");

	
	}
}